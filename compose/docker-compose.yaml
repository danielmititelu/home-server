services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    network_mode: host            # discovery, mDNS, SSDP, BLE, etc.
    privileged: true              # udev/USB access; simplest path on Pi
    environment:
      - TZ=Etc/UTC
    volumes:
      - /srv/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      # enable Bluetooth integrations (optional but handy)
      - /run/dbus:/run/dbus:ro
    devices:
      # Use the ZIGBEE_DEVICE from .env (fails if missing)
      - "${ZIGBEE_DEVICE:?Set ZIGBEE_DEVICE in .env}:/dev/ttyUSB-Zigbee"

  esphome:
    image: ghcr.io/esphome/esphome
    container_name: esphome
    restart: unless-stopped
    network_mode: host
    volumes:
      - /srv/esphome:/config

  nextcloud:
    image: nextcloud:stable
    container_name: nextcloud
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - nc-db
      - nc-redis
    environment:
      - MYSQL_HOST=nc-db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=nc-redis
    volumes:
      - /srv/nextcloud/html:/var/www/html
      - /srv/nextcloud/config:/var/www/html/config
      - /srv/nextcloud/custom_apps:/var/www/html/custom_apps
      - /srv/nextcloud/data:/var/www/html/data
      - /srv/nextcloud/themes:/var/www/html/themes
    networks: [appnet]

  glance:
    image: glanceapp/glance
    container_name: glance
    restart: unless-stopped
    volumes:
      - /srv/glance/config:/app/config
      - /srv/glance/assets:/app/assets
      - /etc/localtime:/etc/localtime:ro
      # Optionally, also mount docker socket if you want to use the docker containers widget
      # - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:8080
    env_file: .env

  nc-db:
    image: mariadb:11
    container_name: nc-db
    restart: unless-stopped
    environment:
      - MARIADB_DATABASE=nextcloud
      - MARIADB_USER=nextcloud
      - MARIADB_PASSWORD=${MYSQL_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command:
      - "mariadbd"
      - "--transaction-isolation=READ-COMMITTED"
      - "--binlog-format=ROW"
    volumes:
      - /srv/db:/var/lib/mysql
    networks: [appnet]

  nc-redis:
    image: redis:7
    container_name: nc-redis
    restart: unless-stopped
    volumes:
      - /srv/redis:/data
    networks: [appnet]

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8081:80/tcp"
      - "8082:443/tcp"
    environment:
      TZ: 'Europe/Bucharest'
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - '/srv/pihole/etc-pihole:/etc/pihole'
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      #- './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    restart: unless-stopped
    ports:
      - :8083:80
    environment:
      - WEBSOCKET_ENABLED=true
    volumes:
      - /srv/vaultwarden/:/data/

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8084
      - TORRENTING_PORT=6881
    volumes:
      - /srv/qbittorrent/appdata:/config
      - /srv/downloads:/downloads
    ports:
      - 8084:8084
      - 6881:6881
      - 6881:6881/udp

networks:
  appnet:
    driver: bridge